PROJECT = ustl
VERSION = 2.0
PLATFORM = Android

MOSYNCDIR ?= /opt/MoSync-4.0-Alpha
ANDROID_NDK_ROOT ?= /opt/android-ndk-r9d

PIPE_TOOL = "$(MOSYNCDIR)/bin/pipe-tool"
BUNDLE = "$(MOSYNCDIR)/bin/Bundle"
PACKAGE = "$(MOSYNCDIR)/bin/package"
CC = "$(MOSYNCDIR)/bin/xgcc"
ADB = "$(MOSYNCDIR)/bin/android/adb"
NBUILD = "$(MOSYNCDIR)/bin/nbuild"

ifeq ($(CXXLIB),stlport)
TARGET ?= newlib
endif
ifeq ($(TARGET),newlib)
CXXLIB ?= stlport
endif

TARGET ?= pipe
CONFIG ?= release

ANDROID_VERSION = 16
ANDROID_KEYSTORE = mosync.keystore
ANDROID_STOREPASS = default
ANDROID_KEYPASS = default

TARGETS = $(OUTPUT_DIR)/$(APK)

DEFS = -DMAPIP
INCLUDES = -I.
PACKAGEFLAGS = 
COMPILE = $(CC) $(CFLAGS) $(DEFS) $(INCLUDES) -S
OBJEXT = s

ifeq ($(TARGET),ndk)
CC = "$(ANDROID_NDK_ROOT)/toolchains/arm-linux-androideabi-4.8/prebuilt/windows-x86_64/bin/arm-linux-androideabi-gcc"
DEFS += -DMOSYNC_NATIVE
CFLAGS += -std=c++0x
INCLUDES += -I"$(ANDROID_NDK_ROOT)/platforms/android-16/arch-arm/usr/include"
INCLUDES += -I"$(ANDROID_NDK_ROOT)/sources/cxx-stl/gnu-libstdc++/4.8/include"
INCLUDES += -I"$(ANDROID_NDK_ROOT)/sources/cxx-stl/gnu-libstdc++/4.8/libs/armeabi/include"
INCLUDES += -I"$(MOSYNCDIR)/include/MAStdNative"
BUILD := ndk
COMPILE := $(CC) $(DEFS) $(INCLUDES) $(CFLAGS) -c
OBJEXT := o
endif

ifeq ($(TARGET),native)
ifeq ($(CONFIG),release)
NCONFIG := Release
endif
ifeq ($(CONFIG),debug)
NCONFIG := Debug
endif
NBUILDCMD = $(NBUILD) --platform $(PLATFORM) --name $(PROJECT) --project $(SOURCE_DIR) --dst $(realpath $(OUTPUT_DIR)) --config $(NCONFIG) --lib-variant $(CONFIG) \
	--compiler-switches "$(CFLAGS)" $(DEFS) $(addprefix -S,$(SOURCES)) $(INCLUDES) --modules --android-ndk-location $(ANDROID_NDK_ROOT) --android-version $(ANDROID_VERSION) \
	--android-build-dir $(realpath $(OUTPUT_DIR)/temp)
BUILD := native
TARGETS := nbuild
endif

ifeq ($(TARGET),newlib)
DEFS += -DNEWLIB
LIBS += newlib.lib
INCLUDES += -I"$(MOSYNCDIR)/include/newlib"
ifeq ($(BUILD),)
BUILD := newlib
endif
endif

ifeq ($(TARGET),pipe)
#DEFS += -DMAPIP
LIBS += mautil.lib mastd.lib
INCLUDES += -I"$(MOSYNCDIR)/include"
ifeq ($(BUILD),)
BUILD := pipe
endif
endif

LIBS += mafs.lib

HEAP_SIZE = 3145728
STACK_SIZE = 524288
DATA_SIZE = 4194304
PIPE_FLAGS = -appcode=YSYW -stabs=stabs.tab -heapsize=$(HEAP_SIZE) -stacksize=$(STACK_SIZE) -datasize=$(DATA_SIZE) -sld=sld.tab

ifeq ($(CONFIG),debug)
CFLAGS += -g -O2 -Wall
DEFS += -DDEBUG
PACKAGEFLAGS += --debug
else
CFLAGS += -fomit-frame-pointer -O2 -Wall 
endif

#DEFS += -DPLATFORM_ANDROID -DVARIANT_ANDROID_ANDROID

SOURCE_DIR := $(realpath .)
BUILD_DIR := build/$(BUILD)_$(CONFIG)
OUTPUT_DIR := $(BUILD_DIR)/$(PLATFORM)
CURRENT_DIR := $(shell cygpath -m "$(SOURCE_DIR)" 2>/dev/null || echo .)

APK = $(PROJECT).apk
ALL_APKS = $(APK) $(PROJECT)_unaligned.apk $(PROJECT)_unsigned_unaligned.apk

VPATH = $(OUTPUT_DIR):.
vpath $(OUTPUT_DIR) .

SOURCES = bktrace.cc cmemlink.cc fstream.cc memblock.cc memlink.cc mistream.cc ofstream.cc sistream.cc sostream.cc ualgobase.cc ubitset.cc unew.cc ustring.cc
SOURCES += bvt/bvt00.cc bvt/bvt01.cc bvt/bvt02.cc bvt/bvt03.cc bvt/bvt04.cc bvt/bvt06.cc bvt/bvt07.cc bvt/bvt08.cc bvt/bvt09.cc bvt/bvt10.cc bvt/bvt11.cc bvt/bvt12.cc bvt/bvt13.cc bvt/bvt14.cc bvt/bvt16.cc bvt/bvt17.cc bvt/bvt18.cc bvt/bvt19.cc bvt/bvt20.cc bvt/bvt21.cc bvt/bvt22.cc bvt/bvt23.cc bvt/bvt24.cc bvt/bvt25.cc bvt/bvt26.cc bvt/bvt27.cc bvt/bvt28.cc bvt/MAMain.cc
#SOURCES +=  bvt/bvt05.cc bvt/bvt15.cc
HEADERS = $(wildcard *.h) 
ASMSRCS = $(patsubst %.cc,$(OUTPUT_DIR)/%.$(OBJEXT),$(notdir $(SOURCES)))
OBJECTS = $(patsubst %.cc,$(OUTPUT_DIR)/%.o,$(notdir $(SOURCES)))
PREPROCESSED = $(patsubst %.cc,$(OUTPUT_DIR)/%.e,$(notdir $(SOURCES)))
CLEANFILES = $(ASMSRCS) $(ALL_APKS) $(OUTPUT_DIR)/res/LocalFiles.bin $(OUTPUT_DIR)/program $(OUTPUT_DIR)/resources $(OUTPUT_DIR)/resources.deps

define NL


endef

.PHONY: all clean depend install link preprocess start nbuild outputdir

all: outputdir $(TARGETS)

outputdir: 
	mkdir -p $(OUTPUT_DIR)

preprocess: $(PREPROCESSED)

-include .dep 

depend: $(SOURCES)
	$(CC) -MM $(DEFS) $(INCLUDES) $^ | sed "s|^\([^.]*\)\\.o|\$(OUTPUT_DIR)/\\1.$(OBJEXT)|" >.dep

$(OUTPUT_DIR):
	mkdir -p $@

nbuild:
	$(NBUILDCMD)

link: $(OUTPUT_DIR) $(OUTPUT_DIR)/program

res/LocalFiles.bin: $(wildcard bvt/bvt*.cc)
	$(BUNDLE) -in bvt -out "$@"

#$(OUTPUT_DIR)/resources: res/MAHeaders.h | $(OUTPUT_DIR)
#$(OUTPUT_DIR)/resources.deps: res/res.lst res/MAHeaders.h | $(OUTPUT_DIR)
$(OUTPUT_DIR)/resources $(OUTPUT_DIR)/resources.deps res/MAHeaders.h: res/res.lst res/LocalFiles.bin  | $(OUTPUT_DIR)
#MAHeaders.h: res/res.lst res/LocalFiles.bin 
	$(RM) res/MAHeaders.h
	(cd res; $(PIPE_TOOL) -appcode=YSYW -R -depend="../$(OUTPUT_DIR)/resources.deps" "../$(OUTPUT_DIR)/resources" res.lst LocalFiles.bin)
	touch $@

$(OUTPUT_DIR)/program: $(ASMSRCS)
	$(PIPE_TOOL) $(PIPE_FLAGS) -s"$(MOSYNCDIR)/lib/${TARGET}_${CONFIG}" -B "$(CURRENT_DIR)/$@" $^ $(LIBS) || { rm -f $(OUTPUT_DIR)/program; exit 1; }

%.$(OBJEXT): %.cc $(HEADERS)
	$(COMPILE) -o $@ $<

%.e: %.cc $(HEADERS)
	$(CC) $(CFLAGS) $(DEFS) $(INCLUDES) -E -o $@ $<

$(OUTPUT_DIR)/$(APK): $(OUTPUT_DIR)/program | $(OUTPUT_DIR)/resources
ifeq ($(CONFIG),debug)
	mkdir -p "$(BUILD_DIR)"
#	cp -rf "$(MOSYNCDIR)"/lib/android_armeabi_debug "$(BUILD_DIR)"
endif
	$(PACKAGE) $(PACKAGEFLAGS) \
		-t platform \
		-p "$(CURRENT_DIR)/$(OUTPUT_DIR)/program" \
		-r "$(CURRENT_DIR)/$(OUTPUT_DIR)/resources" \
		-i "$(CURRENT_DIR)/res/$(PROJECT).icon" \
		-d "$(CURRENT_DIR)/$(OUTPUT_DIR)" \
		-m "$(PLATFORM)/$(PLATFORM)" \
		--vendor BuiltWithMoSyncSDK \
		-n "$(PROJECT)" \
		--version "$(VERSION)" \
		--output-type interpreted \
		--permissions "Compass,File Storage,File Storage/Read,File Storage/Write,Internet Access,Internet Access/HTTPS,Location,Location/Coarse,Location/Fine,Location/Coarse,Location/Fine,Vibration" \
		--android-package "com.mosync.app_$(PROJECT)" \
		--android-version-code $(ANDROID_VERSION) \
		--android-keystore "$(MOSYNCDIR)/etc/$(ANDROID_KEYSTORE)" \
		--android-storepass "$(ANDROID_STOREPASS)" \
		--android-alias "$(ANDROID_KEYSTORE)" \
		--android-keypass "$(ANDROID_KEYPASS)" \
		--android-install-location internalOnly 

clean:
	$(RM) $(CLEANFILES)  || true
	$(RM) -r $(OUTPUT_DIR)

install: all
	$(ADB) install -r $(OUTPUT_DIR)/$(APK)	

start: all logclear install
	$(ADB) shell am start -n com.mosync.app_$(PROJECT)/com.mosync.app_$(PROJECT).MoSync
	$(ADB) logcat $(LOGCAT_FILTER) || { exit 0; }

LOGCAT_FILTER = -s -b main maWriteLog:D CordovaWebView:D WebViewChromium:D JsMessageQueue:D MoSync:D @@MoSync:D ActivityManager:D WindowState:D MoSyncLocation.onLocationChanged:D GCoreUlr:D
#LOGCAT_FILTER += PackageManager:D

logclear:
	$(ADB) logcat -c
logtail: logclear
	$(ADB) logcat $(LOGCAT_FILTER) || { exit 0; }
logcat:
	$(ADB) logcat -d $(LOGCAT_FILTER)
logpull:
	$(ADB) logcat -d $(LOGCAT_FILTER) >ustl.log
	$(ADB) logcat -c

$(foreach src,$(SOURCES), $(eval $(patsubst %.cc,$(OUTPUT_DIR)/%.$(OBJEXT),$(notdir $(src))): $(src)$(NL)	$$(COMPILE) -o $$@ $$<	))

-include $(OUTPUT_DIR)/resources.deps
